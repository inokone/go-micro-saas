{
    "swagger": "2.0",
    "info": {
        "description": "Go-micro-SAAS is a web application skeleton to quickly build new SAAS.",
        "title": "Go-micro-SAAS API",
        "contact": {},
        "version": "0.1"
    },
    "basePath": "/api/v1",
    "paths": {
        "/account/confirm": {
            "get": {
                "description": "Confirms the email address of the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Email confirmation endpoint",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Token for the email confirmation",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/password/change": {
            "put": {
                "description": "Resets the password of the logged in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Reset password endpoint",
                "parameters": [
                    {
                        "description": "The new and old passwords, required to update the password",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.PasswordChange"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/password/reset": {
            "put": {
                "description": "Resets the password of the logged in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Reset password endpoint",
                "parameters": [
                    {
                        "description": "The token and new password to reset the current set password",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.PasswordReset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/recover": {
            "put": {
                "description": "Send a password reset email to a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Recover account endpoint",
                "parameters": [
                    {
                        "description": "The email to send the account recovery to",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.Recovery"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/resend": {
            "put": {
                "description": "Resends email confirmation for an email address.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Resends email confirmation endpoint",
                "parameters": [
                    {
                        "description": "The email to send the confirmation to",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/account.ConfirmationResend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/signin": {
            "post": {
                "description": "Logs in the user, sets up the JWT authorization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User sign in endpoint",
                "parameters": [
                    {
                        "description": "Credentials provided for signing in",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.Credentials"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/signout": {
            "get": {
                "description": "Logs out of the application, deletes the JWT token uased for authorization",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Logout endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/account/signup": {
            "post": {
                "description": "Signs the user up for the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User signup endpoint",
                "parameters": [
                    {
                        "description": "User data provided for the signup",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/user.Profile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/auth/facebook": {
            "get": {
                "description": "Starts Facebook authentication process.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Signin is the authentication endpoint. Starts Facebook authentication process.",
                "responses": {}
            }
        },
        "/auth/facebook/redirect": {
            "get": {
                "description": "Called by Facebook Auth when we have a result of the authentication process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "summary": "Redirect is the authentication callback endpoint. Authenticates/Registers users, sets up JWT token.",
                "responses": {}
            }
        },
        "/auth/google": {
            "get": {
                "description": "Starts Google authentication process.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Signin is the authentication endpoint. Starts Google authentication process.",
                "responses": {}
            }
        },
        "/auth/google/redirect": {
            "get": {
                "description": "Called by Google Auth when we have a result of the authentication process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "summary": "Redirect is the authentication callback endpoint. Authenticates/Registers users, sets up JWT token.",
                "responses": {}
            }
        },
        "/healthcheck": {
            "get": {
                "description": "Returns the status and version of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Health check endpoint of the Schedlue.me app",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.Health"
                        }
                    }
                }
            }
        },
        "/roles/": {
            "get": {
                "description": "Lists all roles of the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Role list endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/roles/:id": {
            "put": {
                "description": "Updates the settings of a role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Role update endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the role information to patch",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The new version of the role to use for update",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.ProfileRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Lists the users of the application.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List users endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/users/:id": {
            "put": {
                "description": "Updates the target user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User update endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user information to patch",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The new version of the user information to use for update",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.Profile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates the target user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User update endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user information to patch",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/users/:id/enabled": {
            "put": {
                "description": "Updates the target user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User enable/disable endpoint",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID of the user information to patch",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Whether the user is enabled to log in and upload photos",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.SetEnabled"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/users/:id/history": {
            "get": {
                "description": "Lists all history events for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "List history events endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/common.Event"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "description": "Gets the current logged in user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get user profile endpoint",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.Profile"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/common.StatusMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "account.ConfirmationResend": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "account.PasswordChange": {
            "type": "object",
            "required": [
                "new",
                "old"
            ],
            "properties": {
                "new": {
                    "type": "string"
                },
                "old": {
                    "type": "string"
                }
            }
        },
        "account.PasswordReset": {
            "type": "object",
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "account.Recovery": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "common.Event": {
            "type": "object",
            "properties": {
                "data": {},
                "id": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "common.Health": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "common.StatusMessage": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "role.ProfileRole": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "quota": {
                    "type": "integer"
                }
            }
        },
        "user.Credentials": {
            "type": "object",
            "required": [
                "captcha_token",
                "email",
                "password"
            ],
            "properties": {
                "captcha_token": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.Profile": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 255
                },
                "id": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 255
                },
                "role": {
                    "$ref": "#/definitions/role.ProfileRole"
                },
                "source": {
                    "type": "string",
                    "maxLength": 100
                },
                "status": {
                    "type": "string",
                    "maxLength": 100
                }
            }
        },
        "user.SetEnabled": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "user.SignupRequest": {
            "type": "object",
            "required": [
                "captcha_token",
                "email",
                "password"
            ],
            "properties": {
                "captcha_token": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "maxLength": 255
                },
                "first_name": {
                    "type": "string",
                    "maxLength": 255
                },
                "last_name": {
                    "type": "string",
                    "maxLength": 255
                },
                "password": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}